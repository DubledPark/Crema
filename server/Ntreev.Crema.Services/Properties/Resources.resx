<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Exception_CannotDeleteUserCategory" xml:space="preserve">
    <value>Folder could not be deleted because user exists.</value>
  </data>
  <data name="Exception_PermissionDenied" xml:space="preserve">
    <value>You do not have permission to perform the operation.</value>
  </data>
  <data name="Exception_CannotDeleteBaseTemplateTable" xml:space="preserve">
    <value>You can not delete a table that is the default template.</value>
  </data>
  <data name="Exception_CannotEndEdit" xml:space="preserve">
    <value>Unable to end editing.</value>
  </data>
  <data name="Message_DomainContextInitialize" xml:space="preserve">
    <value>DomainContext initialize.</value>
  </data>
  <data name="Message_DomainContextIsCreated" xml:space="preserve">
    <value>DomainContext is created.</value>
  </data>
  <data name="Message_DomainState_Format" xml:space="preserve">
    <value>&lt;{0} detection. {1} restored. {2} failed.&gt;</value>
  </data>
  <data name="Message_DomainIsRestored_Format" xml:space="preserve">
    <value>Domain restoration completed : {0}</value>
  </data>
  <data name="Message_DomainRestorationIsFailed_Format" xml:space="preserve">
    <value>Domain restoration failed : {0}</value>
  </data>
  <data name="Message_DomainRestorationMessage" xml:space="preserve">
    <value>A crash was detected. The previous session did not exit normally.
The server will automatically attempt to restore from a data not yet saved.</value>
  </data>
  <data name="Exception_InheritedTableCannotEditTemplate" xml:space="preserve">
    <value>상속받은 테이블은 테이블의 형태를 변경할 수 없습니다.</value>
  </data>
  <data name="Exception_InheritedTableCannotNewChild" xml:space="preserve">
    <value>상속받은 테이블은 자식 테이블을 생성할 수 없습니다.</value>
  </data>
  <data name="Exception_InvalidName_Format" xml:space="preserve">
    <value>{0}은(는) 잘못된 이름입니다.</value>
  </data>
  <data name="Exception_InvalidUserID" xml:space="preserve">
    <value>It is not valid UserID</value>
  </data>
  <data name="Message_LoadTables" xml:space="preserve">
    <value>Load Tables</value>
  </data>
  <data name="Exception_LoggedInUserCannotDelete" xml:space="preserve">
    <value>로그인 되어 있는 아이디는 삭제할 수 없습니다.</value>
  </data>
  <data name="Message_NotFoundDomainsToRestore" xml:space="preserve">
    <value>There are no domains to restore.</value>
  </data>
  <data name="Message_ProgramInfo" xml:space="preserve">
    <value>{0} [Version {1}]</value>
  </data>
  <data name="Message_RestoreResult_Format" xml:space="preserve">
    <value>========= Restoration: Suceess {0}, Fail {1} ==========</value>
  </data>
  <data name="Exception_SameName" xml:space="preserve">
    <value>Can not change to the same name.</value>
  </data>
  <data name="Exception_SameTableNameExist" xml:space="preserve">
    <value>Table with same name already exists.</value>
  </data>
  <data name="Message_ServiceStart" xml:space="preserve">
    <value>===================  Service Start  ===================</value>
  </data>
  <data name="Message_TableContextInitialize" xml:space="preserve">
    <value>Table Context initialized.</value>
  </data>
  <data name="Message_TableContextIsCreated" xml:space="preserve">
    <value>Table Context created.</value>
  </data>
  <data name="Exception_TableIsBeingEdited_Format" xml:space="preserve">
    <value>{0} 테이블이 편집중입니다.</value>
  </data>
  <data name="Exception_TableIsBeingSetup_Format" xml:space="preserve">
    <value>'{0}' 테이블은 형태 변경중입니다.</value>
  </data>
  <data name="Message_TableLoadingIsCompleted" xml:space="preserve">
    <value>Table Loading completed.</value>
  </data>
  <data name="Exception_TypeIsBeingEdited_Format" xml:space="preserve">
    <value>{0} 타입이 편집중입니다.</value>
  </data>
  <data name="Message_UserContextInitialize" xml:space="preserve">
    <value>UserContext initialize.</value>
  </data>
  <data name="Message_UserContextIsCreated" xml:space="preserve">
    <value>UserContext is created.</value>
  </data>
  <data name="Exception_UserIDisAlreadyResitered" xml:space="preserve">
    <value>이미 등록된 아이디입니다.</value>
  </data>
  <data name="Exception_UserIDIsConnecting" xml:space="preserve">
    <value>현재 접속중인 아이디입니다.</value>
  </data>
  <data name="Exception_WrongIDOrPassword" xml:space="preserve">
    <value>Incorrect UserID or password</value>
  </data>
  <data name="Exception_SameTypeNameExist" xml:space="preserve">
    <value>Type with same name already exists.
</value>
  </data>
  <data name="Exception_Expired" xml:space="preserve">
    <value>It has been expired.</value>
  </data>
  <data name="Exception_Commissioned" xml:space="preserve">
    <value>It's already been commissioned.</value>
  </data>
  <data name="Exception_NotClosed" xml:space="preserve">
    <value>It is not closed.</value>
  </data>
  <data name="Exception_InvalidToken" xml:space="preserve">
    <value>It is not valid token</value>
  </data>
  <data name="Exception_InvalidObject" xml:space="preserve">
    <value>It is not valid object.</value>
  </data>
  <data name="Exception_NotInDataBase" xml:space="preserve">
    <value>It cannot work operation, because you are not in database</value>
  </data>
  <data name="Exception_InvalidPassword" xml:space="preserve">
    <value>It is not valid password</value>
  </data>
  <data name="Exception_EmptyStringCannotSend" xml:space="preserve">
    <value>Empty string cannot send.</value>
  </data>
  <data name="Exception_DataBaseHasBeenLoaded" xml:space="preserve">
    <value>DataBase has been loaded.</value>
  </data>
  <data name="Exception_DataBaseHasNotBeenLoaded" xml:space="preserve">
    <value>DataBase has not been loaded.</value>
  </data>
  <data name="Exception_AlreadyInDataBase" xml:space="preserve">
    <value>It is already in database</value>
  </data>
  <data name="Exception_LoadedDataBaseCannotRevert" xml:space="preserve">
    <value>It can not revert from loaded database.</value>
  </data>
  <data name="Exception_NotFoundRevision_Format" xml:space="preserve">
    <value>Revision '{0}' can not found.</value>
    <comment>revision</comment>
  </data>
  <data name="Exception_ExistsPath_Format" xml:space="preserve">
    <value>'{0}' path is already existed.</value>
  </data>
  <data name="Exception_DataBaseIsAlreadyExisted_Format" xml:space="preserve">
    <value>DataBase '{0}' is already existed.</value>
  </data>
  <data name="Exception_ItIsAlreadyBeingEdited" xml:space="preserve">
    <value>It is already being edited.</value>
  </data>
  <data name="Exception_ItemIsAlreadyLocked_Format" xml:space="preserve">
    <value>'{0}' is already locked.</value>
  </data>
  <data name="Exception_IncorrectPassword" xml:space="preserve">
    <value>Incorrect password.</value>
  </data>
  <data name="Exception_CannotChangeToOldPassword" xml:space="preserve">
    <value>Can not change to old password.</value>
  </data>
  <data name="Exception_EmptyStringIsNotAllowed" xml:space="preserve">
    <value>Empty string is not allowed.</value>
  </data>
  <data name="Exception_CannotSendMessageToOfflineUser" xml:space="preserve">
    <value>Can not send message to offline user.</value>
  </data>
  <data name="Exception_ChildTableCannotReadIndependently" xml:space="preserve">
    <value>Child tables can not read data independently.</value>
  </data>
</root>