//Released under the MIT License.
//
//Copyright (c) 2018 Ntreev Soft co., Ltd.
//
//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
//documentation files (the "Software"), to deal in the Software without restriction, including without limitation the 
//rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
//persons to whom the Software is furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
//Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
//WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
//COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
//OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ntreev.Crema.Services.DescriptorService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.ntreev.com", ConfigurationName="DescriptorService.IDescriptorService")]
    internal interface IDescriptorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/IDescriptorService/GetVersion", ReplyAction="http://www.ntreev.com/IDescriptorService/GetVersionResponse")]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/IDescriptorService/IsOnline", ReplyAction="http://www.ntreev.com/IDescriptorService/IsOnlineResponse")]
        bool IsOnline(string userID, byte[] password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/IDescriptorService/GetDataBaseInfos", ReplyAction="http://www.ntreev.com/IDescriptorService/GetDataBaseInfosResponse")]
        Ntreev.Crema.ServiceModel.DataBaseInfo[] GetDataBaseInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.ntreev.com/IDescriptorService/GetServiceInfos", ReplyAction="http://www.ntreev.com/IDescriptorService/GetServiceInfosResponse")]
        Ntreev.Crema.ServiceModel.ServiceInfo[] GetServiceInfos();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IDescriptorServiceChannel : Ntreev.Crema.Services.DescriptorService.IDescriptorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class DescriptorServiceClient : System.ServiceModel.ClientBase<Ntreev.Crema.Services.DescriptorService.IDescriptorService>, Ntreev.Crema.Services.DescriptorService.IDescriptorService {
        
        public DescriptorServiceClient() {
        }
        
        public DescriptorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DescriptorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DescriptorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DescriptorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public bool IsOnline(string userID, byte[] password) {
            return base.Channel.IsOnline(userID, password);
        }
        
        public Ntreev.Crema.ServiceModel.DataBaseInfo[] GetDataBaseInfos() {
            return base.Channel.GetDataBaseInfos();
        }
        
        public Ntreev.Crema.ServiceModel.ServiceInfo[] GetServiceInfos() {
            return base.Channel.GetServiceInfos();
        }
    }
}
