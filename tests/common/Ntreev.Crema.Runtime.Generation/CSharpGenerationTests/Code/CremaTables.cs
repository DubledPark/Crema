//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ------------------------------------------------------------------------------
// dataBase: default
// revision: 9
// requested revision: -1
// devmode: False
// hash value: dded50d216a37d6e07af3dc3d6efc3322f819250
// tags: All
// ------------------------------------------------------------------------------
namespace Ntreev.Crema.Code
{
    using Ntreev.Crema.Code.Reader;
    
    
    public sealed class Table1Row : Ntreev.Crema.Code.CremaRow
    {
        
        private Table1 tableTable1;
        
        private string field_StringKey;
        
        private int field_IntKey;
        
        private Type1 field_TypeKey;
        
        private float field_FloatKey;
        
        private string field_Column4;
        
        private bool field_Column5;
        
        public Table1Row(Ntreev.Crema.Code.Reader.IRow row, Table1 table) : 
                base(table.Columns, row)
        {
            this.tableTable1 = table;
            this.field_StringKey = row.ToString(0);
            this.field_IntKey = row.ToInt32(1);
            this.field_TypeKey = ((Type1)(row.ToInt32(2)));
            this.field_FloatKey = row.ToSingle(3);
            if (row.HasValue(4))
            {
                this.field_Column4 = row.ToString(4);
            }
            if (row.HasValue(5))
            {
                this.field_Column5 = row.ToBoolean(5);
            }
        }
        
        // Creator: admin
        // CreatedDateTime: 12/17/2019 5:22:33 AM
        // Modifier: admin
        // ModifiedDateTime: 12/17/2019 6:31:46 AM
        public string StringKey
        {
            get
            {
                return this.field_StringKey;
            }
        }
        
        // Creator: admin
        // CreatedDateTime: 12/17/2019 5:22:39 AM
        // Modifier: admin
        // ModifiedDateTime: 12/17/2019 6:31:48 AM
        public int IntKey
        {
            get
            {
                return this.field_IntKey;
            }
        }
        
        // Creator: admin
        // CreatedDateTime: 12/17/2019 5:22:49 AM
        // Modifier: admin
        // ModifiedDateTime: 12/17/2019 6:31:50 AM
        public Type1 TypeKey
        {
            get
            {
                return this.field_TypeKey;
            }
        }
        
        // Creator: admin
        // CreatedDateTime: 12/17/2019 6:30:25 AM
        // Modifier: admin
        // ModifiedDateTime: 12/17/2019 6:31:54 AM
        public float FloatKey
        {
            get
            {
                return this.field_FloatKey;
            }
        }
        
        // Creator: admin
        // CreatedDateTime: 12/17/2019 5:23:19 AM
        // Modifier: admin
        // ModifiedDateTime: 12/17/2019 5:23:19 AM
        public string Column4
        {
            get
            {
                return this.field_Column4;
            }
        }
        
        // Creator: admin
        // CreatedDateTime: 12/17/2019 6:30:16 AM
        // Modifier: admin
        // ModifiedDateTime: 12/17/2019 6:30:16 AM
        public bool Column5
        {
            get
            {
                return this.field_Column5;
            }
        }
        
        public Table1 Table
        {
            get
            {
                return this.tableTable1;
            }
        }
    }
    
    // Creator: admin
    // CreatedDateTime: 12/17/2019 5:22:27 AM
    // Modifier: admin
    // ModifiedDateTime: 12/17/2019 6:51:13 AM
    // ContentsModifier: admin
    // ContentsModifiedDateTime: 12/17/2019 6:31:15 AM
    public sealed class Table1 : Ntreev.Crema.Code.CremaTable<Table1Row>
    {
        
        public Table1()
        {
        }
        
        public Table1(Ntreev.Crema.Code.Reader.ITable table) : 
                base(table)
        {
            try
            {
                if ((table.HashValue != "2a3202a0a499f48ea318b430f8fdf94dfde7e25d"))
                {
                    throw new System.Exception("Table1 테이블과 데이터의 형식이 맞지 않습니다.");
                }
            }
            catch (System.Exception e)
            {
                if ((Ntreev.Crema.Code.CremaData.InvokeErrorOccuredEvent(this, e) == false))
                {
                    throw e;
                }
            }
        }
        
        public Table1Row Find(string StringKey, int IntKey, Type1 TypeKey, float FloatKey)
        {
            return base.FindRow(CremaUtility.GenerateHashCode(StringKey.ToString(), IntKey.ToString(), TypeKey.ToString(), FloatKey.ToString()));
        }
        
        protected override Table1Row CreateRowInstance(Ntreev.Crema.Code.Reader.IRow row, object table)
        {
            return new Table1Row(row, ((Table1)(table)));
        }
    }
    
    public sealed class CremaDataSet : Ntreev.Crema.Code.CremaData
    {
        
        private string _name;
        
        private long _revision;
        
        private string _typesHashValue;
        
        private string _tablesHashValue;
        
        private string _tags;
        
        private Table1 tableTable1;
        
        public CremaDataSet(IDataSet dataSet, bool verifyRevision)
        {
            this.Load(dataSet, verifyRevision);
        }
        
        public CremaDataSet(string filename, bool verifyRevision) : 
                this(Ntreev.Crema.Code.Reader.CremaReader.Read(filename), verifyRevision)
        {
        }
        
        public CremaDataSet(System.IO.Stream stream, bool verifyRevision) : 
                this(Ntreev.Crema.Code.Reader.CremaReader.Read(stream), (verifyRevision = false))
        {
        }
        
        public string Name
        {
            get
            {
                return this._name;
            }
        }
        
        public long Revision
        {
            get
            {
                return this._revision;
            }
        }
        
        public string TypesHashValue
        {
            get
            {
                return this._typesHashValue;
            }
        }
        
        public string TablesHashValue
        {
            get
            {
                return this._tablesHashValue;
            }
        }
        
        public string Tags
        {
            get
            {
                return this._tags;
            }
        }
        
        public Table1 Table1
        {
            get
            {
                return this.tableTable1;
            }
        }
        
        public void Load(string filename, bool verifyRevision)
        {
            this.Load(Ntreev.Crema.Code.Reader.CremaReader.Read(filename), verifyRevision);
        }
        
        public void Load(System.IO.Stream stream, bool verifyRevision)
        {
            this.Load(Ntreev.Crema.Code.Reader.CremaReader.Read(stream), verifyRevision);
        }
        
        public void Load(IDataSet dataSet, bool verifyRevision)
        {
            try
            {
                if (("default" != dataSet.Name))
                {
                    throw new System.Exception("데이터의 이름이 코드 이름(default)과 다릅니다.");
                }
            }
            catch (System.Exception e)
            {
                if ((Ntreev.Crema.Code.CremaData.InvokeErrorOccuredEvent(this, e) == false))
                {
                    throw e;
                }
            }
            try
            {
                if (((verifyRevision == true) 
                            && (((int)(9)) != dataSet.Revision)))
                {
                    throw new System.Exception("데이터의 리비전 코드 리비전(9)과 다릅니다.");
                }
            }
            catch (System.Exception e)
            {
                if ((Ntreev.Crema.Code.CremaData.InvokeErrorOccuredEvent(this, e) == false))
                {
                    throw e;
                }
            }
            this._name = dataSet.Name;
            this._revision = dataSet.Revision;
            this._typesHashValue = dataSet.TypesHashValue;
            this._tablesHashValue = dataSet.TablesHashValue;
            this._tags = dataSet.Tags;
            this.tableTable1 = new Table1(dataSet.Tables["Table1"]);
        }
    }
}
